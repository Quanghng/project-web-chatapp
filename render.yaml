# render.yaml

services:
  - type: web
    name: nestjs
    env: node
    rootDir: ./backend
    dockerfilePath: Dockerfile
    startCommand: ./start.sh
    healthCheckPath: /docs
    envVars:
      - key: REDIS_HOST
        value: redis
      - key: REDIS_PORT
        value: 6379
      - key: POSTGRES_HOST
        value: postgres
      - key: POSTGRES_PORT
        value: 5432
      - key: RABBITMQ_HOST
        value: rabbitmq
      - key: RABBITMQ_PORT
        value: 5672
      - key: DATABASE_URL
        value: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/chatapp?schema=public
      - key: PORT
        value: 3333
      - key: FRONTEND_URL
        value: ${frontend.url}
      - key: FRONTEND_DOMAIN
        value: ${frontend.hostname}
      - key: RABBITMQ_URL
        value: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}
      - key: JWT_ACCESS_TOKEN_SECRET
      - key: JWT_REFRESH_TOKEN_SECRET
      - key: CSRF_SECRET
      - key: CSRF_COOKIE_NAME
      - key: TOKEN_COOKIE_MODE
      - key: NODE_ENV
      - key: POSTGRES_USER
      - key: POSTGRES_PASSWORD
      - key: RABBITMQ_USER
      - key: RABBITMQ_PASSWORD

  - type: pserv
    name: postgres
    env: docker
    image: postgres:16.0
    envVars:
      - key: POSTGRES_USER
      - key: POSTGRES_PASSWORD
      - key: POSTGRES_DB
        value: chatapp


  - type: pserv
    name: rabbitmq
    env: docker
    image: rabbitmq:3-management
    envVars:
      - key: RABBITMQ_DEFAULT_USER
      - key: RABBITMQ_DEFAULT_PASS


  - type: pserv
    name: redis
    env: docker
    image: redis:7


  - type: web
    name: frontend
    env: node
    rootDir: ./frontend
    dockerfilePath: Dockerfile
    buildCommand: npm install && npm run build
    startCommand: nginx -g "daemon off;"
    envVars:
      - key: VITE_API_BASE_URL
        value: /api/v1
      - key: VITE_GRAPHQL_HTTP_URL
        value: /graphql
