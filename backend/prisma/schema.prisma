// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  hash String
  firstName String?
  lastName String?
  refreshToken String?

  conversationParticipants ConversationParticipant[]
  messages Message[]
  @@map("users")
}

model Conversation {
  id             Int                        @id @default(autoincrement())
  name           String?
  createdAt      DateTime                   @default(now())
  updatedAt      DateTime                   @updatedAt
  participants   ConversationParticipant[]
  messages       Message[]
  
  @@map("conversations")
}

model ConversationParticipant {
  id             Int          @id @default(autoincrement())
  userId         Int
  conversationId Int
  joinedAt       DateTime     @default(now())

  user           User         @relation(fields: [userId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
  @@map("conversation_participants")
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  createdAt      DateTime     @default(now())
  userId         Int
  conversationId Int

  user           User         @relation(fields: [userId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@map("messages")
}